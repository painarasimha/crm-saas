// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String @id @default(uuid())
  email String @unique
  password  String
  name  String?
  role  String
  createdAt DateTime @default(now())

  organizationMembers OrganizationMember[]
  notes Note[]
  activityLogs ActivityLog[]
}

model Organization {
  id   String @id @default(uuid())
  name String
  createdAt DateTime @default(now())

  members OrganizationMember[]
  customers Customer[]
  subscriptions Subscription[]
  activityLogs ActivityLog[]
}

model OrganizationMember {
  id            String @id @default(uuid())
  userId        String
  organizationId String
  role          String
  joinedAt     DateTime @default(now())

  user         User         @relation(fields: [userId], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id])
}

model Customer {
  id              String           @id @default(uuid())
  name            String
  email           String?
  phone           String?
  createdAt       DateTime         @default(now())
  organizationId  String

  organization    Organization     @relation(fields: [organizationId], references: [id])
  notes           Note[]
} 

model Note{
  id          String     @id @default(uuid())
  content     String
  createdAt   DateTime   @default(now())
  userId      String
  customerId  String

  user        User       @relation(fields: [userId], references: [id])
  customer    Customer   @relation(fields: [customerId], references: [id])
}

model Subscription {
  id              String        @id @default(uuid())
  plan            String        // 'free' | 'pro' | 'enterprise'
  status          String        // 'active' | 'trialing' | 'canceled'
  startDate       DateTime
  endDate         DateTime?
  organizationId  String

  organization    Organization  @relation(fields: [organizationId], references: [id])
}

model ActivityLog {
  id              String        @id @default(uuid())
  action          String
  createdAt       DateTime      @default(now())
  userId          String?
  organizationId  String

  user            User?         @relation(fields: [userId], references: [id])
  organization    Organization  @relation(fields: [organizationId], references: [id])
}

/* model File {
  id          String      @id @default(uuid())
  url         String
  filename    String
  createdAt   DateTime    @default(now())
  customerId  String

  customer    Customer    @relation(fields: [customerId], references: [id])
} */